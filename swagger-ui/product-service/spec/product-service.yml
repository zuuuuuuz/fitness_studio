openapi: 3.0.0
info:
  version: 1.0.0
  title: Фитнес студия
  contact:
    name: ITAcademy
    url: http://it-academy.by

servers:
  - url: http://{host}:{port}
    description: custom server
    variables:
      host:
        description: host name
        default: localhost
      port:
        description: port value
        default: "8080"

tags:
  - name: "Рацион"
    description: "Информация для составления рациона клиента"

paths:
  /api/v1/product:
    post:
      tags:
        - "Рацион"
      summary: Добавление нового продукта
      security:
        - bearerAuth: [ROLE_ADMIN]
      requestBody:
        $ref: "#/components/requestBodies/CreateProduct"
      responses:
        '201':
          description: Продукт добавлен в справочник
        '400':
          $ref: '#/components/responses/Bad_Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal_Server_Error'
    get:
      tags:
        - "Рацион"
      summary: Получить страницу продуктов
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы
          required: false
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            default: 20
          description: Размер страницы
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfProduct'
        '400':
          $ref: '#/components/responses/Bad_Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal_Server_Error'
  /api/v1/product/{uuid}/dt_update/{dt_update}:
    put:
      tags:
        - "Рацион"
      summary: Редактировать информацию о продукте
      security:
        - bearerAuth: [ROLE_ADMIN]
      parameters:
        - in: path
          name: uuid
          description: Идентификатор продукта которое изменяем
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: dt_update
          required: true
          schema:
            type: integer
            format: int64
          description: Дата последнего известного обновления записи
      requestBody:
        $ref: "#/components/requestBodies/CreateProduct"
      responses:
        '200':
          description: "Продукт обновлён"
        '400':
          $ref: '#/components/responses/Bad_Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal_Server_Error'
  /api/v1/recipe:
    post:
      tags:
        - "Рацион"
      summary: Добавление нового рецепта
      security:
        - bearerAuth: [ROLE_ADMIN]
      requestBody:
        $ref: "#/components/requestBodies/CreateRecipe"
      responses:
        '201':
          description: Блюдо добавлено в справочник
        '400':
          $ref: '#/components/responses/Bad_Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal_Server_Error'
    get:
      tags:
        - "Рацион"
      summary: Получить страницу рецептов
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы
          required: false
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            default: 20
          description: Размер страницы
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfRecipe'
        '400':
          $ref: '#/components/responses/Bad_Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal_Server_Error'
  /api/v1/recipe/{uuid}/dt_update/{dt_update}:
    put:
      tags:
        - "Рацион"
      summary: Редактировать информацию о рецепте
      security:
        - bearerAuth: [ROLE_ADMIN]
      parameters:
        - in: path
          name: uuid
          description: Идентификатор рецепта которое изменяем
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: dt_update
          required: true
          schema:
            type: integer
            format: int64
          description: Дата последнего известного обновления записи
      requestBody:
        $ref: "#/components/requestBodies/CreateRecipe"
      responses:
        '200':
          description: "Продукт обновлён"
        '400':
          $ref: '#/components/responses/Bad_Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal_Server_Error'
components:
  requestBodies:
    CreateProduct:
      description: Тело для продукта
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    CreateRecipe:
      description: Тело для рецепта блюда
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecipeForCU'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    Bad_Request:
      description: Запрос некорректен. Сервер не может обработать запрос
      content:
        application/json:
          schema:
            oneOf:
              - type: array
                items:
                  $ref: '#/components/schemas/t_error_response'
              - $ref: '#/components/schemas/t_structured_error_response'
          examples:
            t_error_response:
              value:
                - logref: error
                  message:  Запрос содержит некорректные данные. Измените запрос и отправьте его ещё раз
            t_structured_error_response:
              value:
                logref: structured_error
                errors:
                  - field: time_unit
                    message: Поле должно быть положительным числом
    Unauthorized:
      description: Для выполнения запроса на данный адрес требуется передать токен авторизации
    Forbidden:
      description: Данному токену авторизации запрещено выполнять запроса на данный адрес
    Internal_Server_Error:
      description: Внутренняя ошибка сервера. Сервер не смог корректно обработать запрос
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/t_error_response'
          example:
            - logref: error
              message:  Сервер не смог корректно обработать запрос. Пожалуйста обратитесь к администратору
  schemas:
    Product:
      description: Продукт
      allOf:
        - $ref: '#/components/schemas/t_base_essence'
      properties:
        title:
          type: string
          description: "Название"
          example: "Гречка"
        weight:
          type: integer
          format: int32
          description: "Вес на который рассчитан КБЖУ в граммах\\миллилитрах"
          example: 100
        calories:
          type: integer
          format: int32
          description: "Калории"
          example: 308
        proteins:
          type: number
          format: double
          description: "Белки"
          example: 12.6
        fats:
          type: number
          format: double
          description: "Жиры"
          example: 3.3
        carbohydrates:
          type: number
          format: double
          description: "Углеводы"
          example: 57.1
    Recipe:
      description: Рецепт блюда
      allOf:
        - $ref: '#/components/schemas/t_base_essence'
      properties:
        title:
          type: string
          description: "Название"
          example: "Гречка с лисичками"
        composition:
          type: array
          items:
            type: object
            properties:
              product:
                $ref: '#/components/schemas/Product'
              weight:
                type: integer
                format: int32
                description: "Вес продукта добавленного в блюдо в граммах\\миллилитрах"
                example: 50
              calories:
                type: integer
                format: int32
                description: "Калории в составе блюда считается исходя из веса продукта в блюде и калорий продукта"
                example: 154
              proteins:
                type: number
                format: double
                description: "Белки в составе блюда считается исходя из веса продукта в блюде и белков продукта"
                example: 6.3
              fats:
                type: number
                format: double
                description: "Жиры в составе блюда считается исходя из веса продукта в блюде и жиров продукта"
                example: 1.65
              carbohydrates:
                type: number
                format: double
                description: "Углеводы в составе блюда считается исходя из веса продукта в блюде и углеводов продукта"
                example: 28.55
        weight:
          type: integer
          format: int32
          description: "Вес всего блюда считается на основе состава"
          example: 50
        calories:
          type: integer
          format: int32
          description: "Калории всего блюда считается на основе состава"
          example: 154
        proteins:
          type: number
          format: double
          description: "Белки всего блюда считается на основе состава"
          example: 6.3
        fats:
          type: number
          format: double
          description: "Жиры всего блюда считается на основе состава"
          example: 1.65
        carbohydrates:
          type: number
          format: double
          description: "Углеводы всего блюда считается на основе состава"
          example: 28.55
    RecipeForCU:
      description: Рецепт блюда
      properties:
        title:
          type: string
          description: "Название"
          example: "Гречка с лисичками"
        composition:
          type: array
          items:
            type: object
            properties:
              product:
                type: object
                properties:
                  uuid:
                    description: Идентификатор продукта
                    type: string
                    format: uuid
                    readOnly: true
              weight:
                type: integer
                format: int32
                description: "Вес продукта добавленного в блюдо в граммах\\миллилитрах"
                example: 100

    PageOfProduct:
      type: object
      description: Страница с продуктами
      allOf:
        - $ref: '#/components/schemas/t_page'
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PageOfRecipe:
      type: object
      description: Страница с блюдами
      allOf:
        - $ref: '#/components/schemas/t_page'
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'

    t_base_essence:
      type: object
      description: Описание базовой сущности.
      required:
        - uuid
        - dt_create
        - dt_update
      properties:
        uuid:
          description: Уникальный идентификатор сущности
          type: string
          format: uuid
          readOnly: true
        dt_create:
          description: Дата создания сущности (linux time)
          type: number
          format: int64
          readOnly: true
        dt_update:
          description: Дата последнего обновления сущности (linux time)
          type: integer
          format: int64
          readOnly: true

    t_page:
      type: object
      required:
        - number
        - size
        - total_pages
        - total_elements
        - content
        - first
        - number_of_elements
        - last
      description: Страница
      properties:
        number:
          description: Номер текущей запрошенной страницы
          type: integer
          format: int32
        size:
          description: Запрошенное количество элементов на страницу
          type: integer
          format: int32
        total_pages:
          description: Всего количество страниц учитывающих запрашиваемое количество элементов на страницу
          type: integer
          format: int32
        total_elements:
          description: Всего количество записей соответствующих запросу
          type: integer
          format: int64
        first:
          description: Признак является ли страница первой
          type: boolean
        number_of_elements:
          description: Количество элементов на текущей странице
          type: integer
          format: int32
        last:
          description: Признак является ли страница последней
          type: boolean

    t_error_response:
      type: object
      description: Ошибка. Содержит общее описание ошибки
      required:
        - logref
        - message
      properties:
        logref:
          type: string
          description: |
            Тип ошибки (предназначено для машинной обработки):
              * `error` - Признак что ошибка не привязана к полю
          enum:
            - "error"
        message:
          description: Сообщение ошибки
          type: string
          example: Запрос содержит некорректные данные. Измените запрос и отправьте его ещё раз

    t_structured_error_response:
      type: object
      description: Ошибка. Содержит описание ошибок со ссылками на поля сущности
      required:
        - logref
        - errors
      properties:
        logref:
          type: string
          description: |
            Тип ошибки (предназначено для машинной обработки):
              * `structured_error` - Признак что ошибка привязана к полю
          enum:
            - "structured_error"
        errors:
          description: Наименование ошибочного поля
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                description: Сообщение об ошибке
                example: Поле должно быть положительным числом
              field:
                type: string
                description: Наименование ошибочного поля
                example: time_unit